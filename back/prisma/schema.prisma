// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}


model User {
  id             String  @id @default(uuid())
  email          String  @unique
  password       String
  name           String
  isActivated    Boolean @default(false)
  activationLink String
  token          Token?
  chat1          Chat[] @relation("user1")
  chat2          Chat[] @relation("user2")
  messages       Message[]
  files          Files[]
}

model Token {
  id           Int     @id @default(autoincrement())
  userId       String  @unique    
  refreshToken String  @db.Text  
  user         User    @relation(fields: [userId], references: [id])
}

model ConfirmCode {
  id          String @id @default(uuid())
  confirmCode Int 
}

model Chat {
  id           String @id @default(uuid())
  firstUserId  String 
  secondUserId String
  user1        User    @relation("user1" ,fields: [firstUserId], references: [id])
  user2        User    @relation("user2" ,fields: [secondUserId], references: [id])
  messages     Message[]
}

model Message {
  id       Int      @id @default(autoincrement())
  senderId String 
  sender   User     @relation(fields: [senderId], references: [id])
  chatId   String
  chat     Chat     @relation(fields: [chatId], references: [id])
  text     String   @db.Text
  date     DateTime
}

model Files {
  id          String @id @default(uuid())
  name        String @db.Text
  type        String 
  access_link String @db.Text
  size        Int?
  path        String @db.Text
  userId      String 
  user        User   @relation(fields: [userId], references: [id])
  parent_id   String?
}
